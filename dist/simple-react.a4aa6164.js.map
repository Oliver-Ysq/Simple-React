{"version":3,"sources":["src/SmpReact/main_methods/createElement.js","src/SmpReact/utils/dom.js","src/SmpReact/dom_methods/render.js","src/SmpReact/dom_methods/diff.js","src/SmpReact/main_methods/update.js","src/SmpReact/main_methods/Component.js","src/SmpReact/SmpReact.js","src/SmpReact/SmpReactDom.js","src/components/Header/Header.jsx","src/components/Footer/Footer.jsx","src/components/Counter/Counter.jsx","App.jsx","index.jsx"],"names":["createVNode","type","props","ref","key","children","domElm","text","createElement","tag","elementName","data","attributes","length","i","child","includes","undefined","String","dom","vnode","document","createTextNode","setTextContent","content","nodeValue","getParentNode","elm","parentNode","appendChild","parent","removeChild","getNextSibling","nextSibling","insertBefore","newNode","refNode","insertAfter","lastChild","addClass","className","classList","add","bindEvent","fn","addEventListener","removeEvent","removeEventListener","setAttr","value","setAttribute","removeAttr","removeAttribute","createDomElement","Array","isArray","renderComponent","setDomProps","keys","Object","startsWith","eventName","substring","toLowerCase","console","log","compVNode","Comp","instance","prototype","render","__nextProps","__nextState","state","__createVNode","__component","component","parentDom","diff","oldVNode","newVNode","isSameVNode","diffComponent","diffVNode","replaceVNode","oldCompVNode","newCompVNode","nextProps","__dirty","oldChild","oldProps","newChild","newText","newProps","diffProps","hasOldChild","Boolean","hasNewChild","diffChildren","addVNodes","removeVNodes","oldDomElm","newDomElm","oldV","newV","before","start","end","newDom","parentElm","oldStartIdx","oldKeyToIdx","idxInOld","elmToMove","newStartIdx","oldEndIdx","newEndIdx","oldStartVNode","oldEndVNode","newStartVNode","newEndVNode","createKeyList","map","defer","Promise","resolve","then","updateQueue","enqueueRender","updater","push","flushRenderQueue","sort","curUpdater","pop","__update","flushCallback","callbacks","cbk","__setStateCallbacks","shift","call","Component","__prevProps","__prevState","__vnode","operater","callback","SmpReact","SmpReactDom","Footer","imgsrc","Counter","disabled","n","minus","mult","clear","setInterval","clearInterval","App","interval","flag","calc","setState","Error","that","window","alert","getElementById"],"mappings":"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","file":"simple-react.a4aa6164.js","sourceRoot":"..","sourcesContent":["// 创建一个虚拟dom\r\nexport function createVNode(type, props, ref, key, children, domElm, text) {\r\n  return {\r\n    type, //标签类型\r\n    props,  //标签属性\r\n    children, //子组件\r\n    ref,  //获取DOM元素\r\n    key,  //唯一标识\r\n    domElm,  //DOM元素\r\n    text, //文本内容\r\n  };\r\n}\r\n\r\nexport default function createElement(tag) {\r\n  const {elementName: type, attributes: data, children} = tag;\r\n  const {key, ref, ...props} = data;\r\n\r\n  // 处理子级列表中的 string or number 同样转换为 VNode\r\n  if (children && children.length) {\r\n    const length = children.length;\r\n    for (let i = 0; i < length; i++) {\r\n      const child = children[i];  //对每一个子节点进行遍历\r\n      if (['string', 'number'].includes(typeof child)) {\r\n        // 非标签的文字节点， vnode.type === undefined\r\n        children[i] = createVNode(\r\n          undefined,\r\n          {},\r\n          undefined,\r\n          undefined,\r\n          undefined,\r\n          undefined,\r\n          String(children[i])\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return createVNode(type, props, ref, key, children, undefined, undefined);\r\n}","/*\r\n  原生dom操作\r\n* */\r\n\r\nconst dom = {\r\n  //根据vnode.type创建dom元素\r\n  createElement(vnode) {\r\n    return document.createElement(vnode.type);\r\n  },\r\n\r\n  //创建text节点\r\n  createTextNode(text) {\r\n    return document.createTextNode(text);\r\n  },\r\n\r\n  //修改文本节点的值\r\n  setTextContent(domElm, content) {\r\n    if (domElm && ['string', 'number'].includes(typeof content)) {\r\n      domElm.nodeValue = content;\r\n    }\r\n  },\r\n\r\n  //得到父元素\r\n  getParentNode(elm) {\r\n    return elm && elm.parentNode;\r\n  },\r\n\r\n  //增加子元素\r\n  appendChild(parent, child) {\r\n    parent.appendChild(child);\r\n  },\r\n\r\n  //删除指定子元素\r\n  removeChild(parent, child) {\r\n    if (child && parent && child.parentNode) {\r\n      parent.removeChild(child);\r\n    }\r\n  },\r\n\r\n  //获取兄弟元素\r\n  getNextSibling(domElm) {\r\n    return domElm.nextSibling === null ? false : domElm.nextSibling;\r\n  },\r\n\r\n  //在前边插入节点\r\n  insertBefore(parent, newNode, refNode) {\r\n    if (refNode) {\r\n      parent.insertBefore(newNode, refNode);\r\n    } else {\r\n      dom.appendChild(parent, newNode);\r\n    }\r\n  },\r\n\r\n  //在后边插入节点\r\n  insertAfter(newNode, refNode) {\r\n    const parent = refNode.parentNode;\r\n    if (parent.lastChild === refNode) {\r\n      parent.appendChild(newNode);\r\n    } else {\r\n      parent.insertBefore(newNode, refNode.nextSibling);\r\n    }\r\n  },\r\n\r\n  //绑定class\r\n  addClass(domElm, className) {\r\n    domElm.classList.add(className);\r\n  },\r\n\r\n  //绑定事件\r\n  bindEvent(domElm, type, fn) {\r\n    domElm.addEventListener(type, fn);\r\n  },\r\n\r\n  //解绑事件\r\n  removeEvent(domElm, type, fn) {\r\n    domElm.removeEventListener(type, fn);\r\n  },\r\n\r\n  //设置属性\r\n  setAttr(domElm, key, value) {\r\n    domElm.setAttribute(key, value);\r\n  },\r\n\r\n  //删除属性\r\n  removeAttr(domElm, key) {\r\n    domElm.removeAttribute(key);\r\n  },\r\n\r\n};\r\nexport default dom;","import dom from \"../utils/dom\";\r\nimport {createVNode} from \"../main_methods/createElement\";\r\n\r\n// 创建dom元素：虚拟dom => dom\r\nexport function createDomElement(vnode) {\r\n  //type为function：组件元素\r\n  //先render出vnode节点\r\n\r\n  if (Array.isArray(vnode)) {\r\n    //如果是vnode是列表，则为他们增加父节点\r\n    vnode = createVNode('div', undefined, undefined, undefined, vnode, undefined);\r\n  }\r\n  if (typeof vnode.type === 'function') {\r\n    /**********    组件 ==> 组件实例 ==> 元素节点（elVNode）    ***********/\r\n    vnode = renderComponent(vnode);\r\n  }\r\n  const {children, type, text, props} = vnode;\r\n\r\n  if (type && typeof type === 'string') {\r\n    //type为字符串：dom元素\r\n    vnode.domElm = dom.createElement(vnode);//创建当前dom元素\r\n    if (Array.isArray(children)) {\r\n      //递归创建子元素\r\n      for (let i = 0; i < children.length; i++) {\r\n        dom.appendChild(vnode.domElm, createDomElement(children[i]));\r\n      }\r\n    }\r\n  } else if ((type === undefined || type === null) && text) {\r\n    //type为undefined：文本节点\r\n    vnode.domElm = dom.createTextNode(text);\r\n  }\r\n\r\n  if (vnode.domElm) {//如果创建成功了，则设置dom元素的属性\r\n    setDomProps(vnode.domElm, props);\r\n    return vnode.domElm;\r\n  } else {  //创建失败，则renderComponent后的vnode依然是组件节点，需要递归rener\r\n    return createDomElement(vnode);\r\n  }\r\n}\r\n\r\n// 为dom元素设置属性\r\nexport function setDomProps(domElm, props) {\r\n  if (domElm && typeof props === 'object') {\r\n    const keys = Object.keys(props);\r\n    for (let i = 0; i < keys.length; i++) {\r\n\r\n      const key = keys[i];\r\n      const value = props[key];\r\n\r\n      if (key.startsWith('on')) {\r\n        // 事件绑定\r\n        if (typeof value === 'function') {\r\n          const eventName = key.substring(2).toLowerCase();  // 去出on之后的字符串并转换为小写\r\n          dom.bindEvent(domElm, eventName, value);\r\n        } else {\r\n          console.log('invalid eventHandler');\r\n        }\r\n      } else if (key === 'className') {\r\n        // 添加class\r\n        dom.addClass(domElm, value);\r\n      } else {\r\n        // 属性设置\r\n        dom.setAttr(domElm, key, value);\r\n      }\r\n\r\n    }\r\n  }\r\n}\r\n\r\n/**********    组件 ==> 组件实例 ==> 元素节点（elVNode）    ***********/\r\nexport function renderComponent(compVNode) {\r\n  const {type: Comp, props} = compVNode;  //compVNode：组件； instance：组件实例。  vnode：元素节点；\r\n  let instance = compVNode.instance;\r\n  // 当 instance 已经存在时，则不需要重新创建实例\r\n  if (!instance) {\r\n    // 传入 props，初始化组件实例\r\n    // 支持：类组件、函数组件\r\n    if (Comp.prototype && Comp.prototype.render) {\r\n      instance = new Comp(props);\r\n    }\r\n\r\n    // 初次渲染时：将来的属性与状态其实便是与当前值一致\r\n    instance.__nextProps = props;\r\n    instance.__nextState = instance.state;\r\n  }\r\n\r\n  // 调用 render 获取元素节点 VNode\r\n  const vnode = instance.__createVNode();\r\n\r\n  // 组件、元素、实例之间保持相互引用，有利于双向连接整棵虚拟树\r\n  instance.__component = compVNode; //组件\r\n  compVNode.instance = instance;  //组件实例\r\n  compVNode.vnode = vnode;    //元素节点\r\n  vnode.component = compVNode;  //组件\r\n\r\n  return vnode;\r\n}\r\n\r\n// 渲染函数\r\nexport default function render(vnode, parentDom) {\r\n  const domElm = createDomElement(vnode); //创建dom元素\r\n  dom.appendChild(parentDom, domElm);  //将dom元素插入父节点\r\n  return domElm;\r\n}","import dom from \"../utils/dom\";\r\nimport {createDomElement, renderComponent, setDomProps} from \"./render\";\r\n\r\n//新旧节点相同：diff算法\r\nexport function diff(oldVNode, newVNode) {\r\n  if (isSameVNode(oldVNode, newVNode)) {\r\n    if (typeof oldVNode.type === 'function') {\r\n      // 组件节点\r\n      diffComponent(oldVNode, newVNode);\r\n    } else {\r\n      // 元素节点，直接执行比对\r\n      diffVNode(oldVNode, newVNode);\r\n    }\r\n  } else {\r\n    console.log('not same vnode');\r\n    replaceVNode(oldVNode, newVNode);\r\n  }\r\n}\r\n\r\n//组件节点diff\r\nfunction diffComponent(oldCompVNode, newCompVNode) {\r\n  const {instance, vnode: oldVNode, elm} = oldCompVNode;\r\n  const {props: nextProps} = newCompVNode;\r\n\r\n  if (instance && oldVNode) {\r\n    instance.__dirty = false;\r\n\r\n    // 更新状态和属性\r\n    instance.__nextProps = nextProps;\r\n    if (!instance.__nextState) instance.__nextState = instance.state;\r\n\r\n    // 复用旧组件实例和元素\r\n    newCompVNode.instance = instance;\r\n    newCompVNode.elm = elm;\r\n\r\n    // 使用新属性、新状态，旧组件实例\r\n    // 重新生成 新虚拟DOM\r\n    const newVNode = renderComponent(newCompVNode);\r\n\r\n    // 递归触发 diff\r\n    diff(oldVNode, newVNode);\r\n  }\r\n}\r\n\r\n//元素节点diff\r\nfunction diffVNode(oldVNode, newVNode) {\r\n\r\n  const {domElm, children: oldChild, text: oldText, props: oldProps} = oldVNode;\r\n  const {children: newChild, text: newText, props: newProps} = newVNode;\r\n\r\n  if (oldVNode === newVNode || !domElm) return;\r\n\r\n  // 节点相同，dom类型一定相同\r\n  newVNode.domElm = domElm;\r\n\r\n  //更新属性\r\n  diffProps(domElm, oldProps, newProps);\r\n\r\n  const hasOldChild = Boolean(oldChild && oldChild.length);\r\n  const hasNewChild = Boolean(newChild && newChild.length);\r\n\r\n  if (newText !== undefined) {\r\n    //新节点是文本节点\r\n    dom.setTextContent(domElm, newText);\r\n  } else {\r\n    // 新节点是元素节点\r\n    if (hasOldChild && hasNewChild) {\r\n      // 新旧节点均存在子级列表时，直接 diff 列表\r\n      if (oldChild !== newChild) diffChildren(domElm, oldChild, newChild);\r\n    } else if (hasNewChild) {\r\n      // 旧节点不包含子级，而新节点包含子级：直接新增新子级\r\n      addVNodes(domElm, null, newChild, 0, newChild.length - 1);\r\n    } else if (hasOldChild) {\r\n      // 新子级不包含元素，而旧节点包含子级：则需要删除旧子级\r\n      removeVNodes(domElm, oldChild, 0, oldChild.length - 1);\r\n    }\r\n    // else if (oldText !== undefined) {\r\n    // 当新旧均无子级\r\n    // 这里有可能存在 <Text> 标签，且新内容为空\r\n    // 因此直接清空旧元素文字\r\n    // dom.setTextContent(domElm, '');\r\n    // }\r\n  }\r\n}\r\n\r\n//新旧节点不同：直接替换\r\nfunction replaceVNode(oldVNode, newVNode) {\r\n\r\n  const {domElm: oldDomElm} = oldVNode;\r\n  const parentDom = dom.getParentNode(oldDomElm);\r\n\r\n  //删除旧dom\r\n  dom.removeChild(parentDom, oldDomElm);\r\n  //创建新dom\r\n  const newDomElm = createDomElement(newVNode);\r\n  dom.appendChild(parentDom, newDomElm);\r\n\r\n}\r\n\r\nfunction diffProps(domElm, oldProps, newProps) {\r\n  if (oldProps === newProps || !domElm) return;\r\n  if (typeof oldProps === 'object' && typeof newProps === 'object') {\r\n    let keys = Object.keys(oldProps);\r\n\r\n    //处理旧属性\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      const oldV = oldProps[key], newV = newProps[key];\r\n\r\n      if (key === 'className' && oldV === 'ban') console.log(key, oldV, newV);\r\n\r\n      if (key.startsWith(\"on\")) {\r\n        //处理事件\r\n        if (typeof oldV === 'function' && oldV !== newV) {\r\n          //当存在旧事件，且新旧值不一致时：事件解绑\r\n          const eventName = key.substring(2).toLowerCase();\r\n          dom.removeEvent(domElm, eventName, oldV);\r\n        }\r\n      } else {\r\n        //普通属性处理\r\n        if (newV === undefined || (key === 'className' && (newV === false || newV === null))) {\r\n          // 若oldVNode中的属性在newVNode中不存在，则直接删除\r\n          // class属性需要特殊处理\r\n          dom.removeAttr(domElm, key === 'className' ? 'class' : key);\r\n        }\r\n      }\r\n    }\r\n\r\n    // 设置新属性\r\n    setDomProps(domElm, newProps);\r\n  }\r\n}\r\n\r\n//添加vnodes\r\nfunction addVNodes(domElm, before, children, start, end) {\r\n  for (let i = 0; i < end - start; i++) {\r\n    let newDom = children[i].domElm || createDomElement(children[i]);\r\n    dom.insertAfter(newDom, before);\r\n    before = newDom;\r\n  }\r\n}\r\n\r\n//删除vnodes\r\nfunction removeVNodes(domElm, children, start, end) {\r\n  for (let i = 0; i < end - start; i++) {\r\n    dom.removeChild(domElm, children[i]);\r\n  }\r\n}\r\n\r\n//对比子级列表\r\nfunction diffChildren(parentElm, oldChild, newChild) {\r\n\r\n  /**\r\n   * 更新子级列表\r\n   * 双列表游标 + while\r\n   */\r\n\r\n    // 初始化游标\r\n  let oldStartIdx = 0, newStartIdx = 0;\r\n  let oldEndIdx = oldChild.length - 1, newEndIdx = newChild.length - 1;\r\n\r\n  // 列表首尾节点\r\n  let oldStartVNode = oldChild[0], oldEndVNode = oldChild[oldEndIdx];\r\n  let newStartVNode = newChild[0], newEndVNode = newChild[newEndIdx];\r\n\r\n  let oldKeyToIdx, idxInOld, elmToMove, before;\r\n\r\n  /**\r\n   * 当起始游标 < 终止游标时，\r\n   * 表示列表中仍有未 diff 的节点\r\n   * 进入循环\r\n   */\r\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\r\n    /**\r\n     * 1. 排除非有效的节点\r\n     * 剔除列表中包含的 undefined || false || null\r\n     */\r\n    if (oldStartVNode == null) oldStartVNode = oldChild[++oldStartIdx];\r\n    else if (oldEndVNode == null) oldEndVNode = oldChild[--oldEndIdx];\r\n    else if (newStartVNode == null) newStartVNode = newChild[++newStartIdx];\r\n    else if (newEndVNode == null) newEndVNode = newChild[--newEndIdx];\r\n    else if (isSameVNode(oldStartVNode, newStartVNode)) {\r\n      /**\r\n       * 2. 正反向两两比对列表首项与末项匹配成功\r\n       * 移动游标，递归 diff 两个节点\r\n       * 均未匹配上，则进入 3. key 值比对\r\n       */\r\n      diff(oldStartVNode, newStartVNode);\r\n\r\n      oldStartVNode = oldChild[++oldStartIdx];\r\n      newStartVNode = newChild[++newStartIdx];\r\n    } else if (isSameVNode(oldEndVNode, newEndVNode)) {\r\n\r\n      diff(oldEndVNode, newEndVNode);\r\n\r\n      oldEndVNode = oldChild[--oldEndIdx];\r\n      newEndVNode = newChild[--newEndIdx];\r\n    } else if (isSameVNode(oldStartVNode, newEndVNode)) {\r\n\r\n      dom.insertBefore(parentElm, oldStartVNode.domElm, dom.getNextSibling(oldEndVNode.domElm));\r\n      diff(oldStartVNode, newEndVNode);\r\n\r\n      oldStartVNode = oldChild[++oldStartIdx];\r\n      newEndVNode = newChild[--newEndIdx];\r\n    } else if (isSameVNode(oldEndVNode, newStartVNode)) {\r\n\r\n      dom.insertBefore(parent, oldEndVNode.domElm, oldStartVNode.domElm);\r\n      diff(oldEndVNode, newStartVNode);\r\n\r\n      oldEndVNode = oldChild[--oldEndIdx];\r\n      newStartVNode = newChild[++newStartIdx];\r\n    } else {\r\n      /**\r\n       * 3. 两端比对均不匹配\r\n       * 进入 key 值比对\r\n       */\r\n      // 根据剩余的旧列表创建 key list\r\n      if (!oldKeyToIdx) oldKeyToIdx = createKeyList(oldChild, oldStartIdx, oldEndIdx);\r\n\r\n      // 判断新列表项的 key值 是否存在\r\n      idxInOld = oldKeyToIdx[newStartVNode.key || ''];\r\n      if (!idxInOld) {\r\n        /*\r\n         * 4. 新 key 值在旧列表中不存在\r\n         * 直接将该节点插入\r\n        */\r\n        dom.insertBefore(parentElm, createDomElement(newStartVNode), oldStartVNode.domElm);\r\n        newStartVNode = newChild[++newStartIdx];\r\n      } else {\r\n        /*\r\n        * 5. 新 key 在旧列表中存在时\r\n        * 继续判断是否为同类型节点\r\n        */\r\n        elmToMove = oldChild[idxInOld];\r\n        if (isSameVNode(elmToMove, newStartVNode)) {\r\n          /*\r\n          * 6. 新旧节点类型一致\r\n          * key 有效，直接移动并 diff\r\n          */\r\n          dom.insertBefore(parentElm, elmToMove.domElm, oldStartVNode.domElm);\r\n          diff(elmToMove, newStartVNode);\r\n\r\n          // 清空旧列表项\r\n          // 后续的比对可以直接跳过\r\n          oldChild[idxInOld] = undefined;\r\n        } else {\r\n          /*\r\n           * 7. 新旧节点类型不一致\r\n           * key 效，直接创建元素并插入\r\n          */\r\n          dom.insertBefore(parentElm, createDomElement(newStartVNode), oldStartVNode.domElm);\r\n        }\r\n        newStartVNode = newChild[++newStartIdx];\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n   * 8. 当有游标列表为空时，则结束循环，进入策略3\r\n   * 当 旧列表为空 时，则创建并插入新列表中的剩余节点\r\n   * 当 新列表为空 时，则删除旧列表中的剩余节点\r\n  */\r\n  if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\r\n    if (oldStartIdx > oldEndIdx) {\r\n      // 新增节点\r\n      const vnode = newChild[newEndIdx + 1];\r\n      before = vnode ? vnode.domElm : null;\r\n      addVNodes(parentElm, before, newChild, newStartIdx, newEndIdx);\r\n    } else {\r\n      // 删除节点\r\n      removeVNodes(parentElm, oldChild, oldStartIdx, oldEndIdx);\r\n    }\r\n  }\r\n}\r\n\r\n// 对比两vnode是否是相同的\r\nfunction isSameVNode(oldVNode, newVNode) {\r\n  return oldVNode.key === newVNode.key && oldVNode.type === newVNode.type;\r\n}\r\n\r\n//工具函数 创建key列表\r\nfunction createKeyList(children, start, end) {\r\n  let map = {};\r\n  for (let i = start; i <= end - start; i++) {\r\n    const {key} = children[i];\r\n    map[key] = true;\r\n  }\r\n  return map;\r\n}","const defer = fn => {Promise.resolve().then(fn);}; //微任务 不阻塞宏任务（渲染等\r\n\r\nconst updateQueue = [];\r\n\r\n// 队列更新 API\r\nexport function enqueueRender(updater) {\r\n  // 将所有 updater 同步推入更新队列中\r\n  // 为实例添加一个属性 __dirty，标识是否处于待更新状态\r\n  // 初始 和 更新完毕，该值会被置为 false\r\n  // 推入队列时，标记为 true\r\n  if (\r\n    !updater.__dirty &&\r\n    (updater.__dirty = true) &&\r\n    updateQueue.push(updater) === 1\r\n  ) {\r\n    // 异步化冲洗队列\r\n    // 最终只执行一次冲洗\r\n    defer(flushRenderQueue);\r\n  }\r\n}\r\n\r\n// 合并一次循环中多次 updater\r\nfunction flushRenderQueue() {\r\n  if (updateQueue.length) {\r\n    // 排序更新队列\r\n    updateQueue.sort();\r\n\r\n    // 循环队列出栈\r\n    let curUpdater = updateQueue.pop();\r\n    while (curUpdater) {\r\n\r\n      // 当组件处于 待更新态 时，触发组件更新\r\n      // 如果该组件已经被更新完毕，则该状态为 false\r\n      // 则后续的更新均不再执行\r\n      if (curUpdater.__dirty) {\r\n        // 调用组件自身的更新函数\r\n        curUpdater.__update();\r\n\r\n        // 执行 callback\r\n        flushCallback(curUpdater);\r\n      }\r\n      // curUpdater.__dirty = false;\r\n      curUpdater = updateQueue.pop();\r\n    }\r\n  }\r\n}\r\n\r\n// 执行缓存在 updater.__setStateCallbacks 上的回调\r\nfunction flushCallback(updater) {\r\n  const callbacks = updater.__setStateCallbacks;\r\n  let cbk;\r\n  if (callbacks && callbacks.length) {\r\n    while (cbk = callbacks.shift()) cbk.call(updater);\r\n  }\r\n}","import {diff} from \"../dom_methods/diff\";\r\nimport {enqueueRender} from \"./update\";\r\n\r\nexport default class Component {\r\n\r\n  // 通过保持三份不同的时期的快照\r\n  // 有利于对组件的状态及属性的管理和追踪\r\n\r\n  // 属性\r\n  // public __prevProps\r\n  // public props = {}\r\n  // public __nextProps\r\n\r\n  // 状态\r\n  // public __prevState\r\n  // public state = {}\r\n  // public __nextState\r\n\r\n  // 储存当前组件渲染出的VNode\r\n  // public __vnode\r\n\r\n  // 储存组件节点\r\n  // public __component\r\n\r\n  constructor(props) {\r\n    this.props = props;\r\n    this.__setStateCallbacks = [];\r\n  }\r\n\r\n  render() {\r\n    //由组件实例实现\r\n    return null;\r\n  }\r\n\r\n  __createVNode() {\r\n    // 该方法用于封装重新执行 render 的逻辑\r\n\r\n    // state 与 props 状态变更的逻辑\r\n    this.__prevProps = this.props;\r\n    this.__prevState = this.state;\r\n\r\n    this.props = this.__nextProps;\r\n    this.state = this.__nextState;\r\n\r\n    this.__nextState = undefined;\r\n    this.__nextProps = undefined;\r\n\r\n    // 重新执行 render 生成 VNode\r\n    this.__vnode = this.render();\r\n    return this.__vnode;\r\n  }\r\n\r\n  //更新state\r\n  setState(operater, callback) {\r\n    console.log('setstate');\r\n    // 合并状态, 暂存于即将更新态中\r\n    if (typeof operater === 'function') {\r\n      operater = operater(this.state, this.props);\r\n    }\r\n\r\n    //setState帮你合并\r\n    this.__nextState = {\r\n      ...this.state,\r\n      ...operater,\r\n    };\r\n\r\n    // 调用更新，并执行回调\r\n    callback && this.__setStateCallbacks.push(callback);\r\n    enqueueRender(this);\r\n  }\r\n\r\n  //更新状态，调用diff\r\n  __update() {\r\n    // 临时存储 旧虚拟节点 (oldVNode)\r\n    const oldVNode = this.__vnode;\r\n\r\n    this.__nextProps = this.props;\r\n    if (!this.__nextState) this.__nextState = this.state;\r\n\r\n    // 重新生成 新虚拟节点(newVNode)\r\n    this.__vnode = this.__createVNode();\r\n\r\n    // 调用 diff，更新 VNode\r\n    diff(oldVNode, this.__vnode);\r\n\r\n    this.__dirty = false;\r\n  };\r\n}","import createElement from \"./main_methods/createElement\";\r\nimport Component from \"./main_methods/Component\";\r\n\r\nconst SmpReact = {\r\n  createElement,\r\n  Component\r\n};\r\n\r\nexport default SmpReact;","import render from \"./dom_methods/render\";\r\n\r\nconst SmpReactDom = {\r\n  render,\r\n};\r\n\r\nexport default SmpReactDom;","import SmpReact from \"../../SmpReact/SmpReact\";\r\nimport imgsrc from \"../../assets/gamepad.png\";\r\nimport \"./style.css\";\r\n\r\nexport default class Footer extends SmpReact.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"wrapper\">\r\n        <div class=\"box\">\r\n          <img className=\"logo\" src={imgsrc} alt=\"\"/>\r\n          <div class=\"textWrapper\">\r\n            <div className=\"title\">Counter-Demo</div>\r\n            <div className=\"tips\">powered by SmpReact</div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}","import SmpReact from \"../../SmpReact/SmpReact\";\r\nimport \"./style.css\";\r\n\r\nexport default class Footer extends SmpReact.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <footer>\r\n        <div className=\"txt\">Oliver-ysq</div>\r\n        <div className=\"txt\"><a target=\"_blank\" href=\"https://github.com/Oliver-Ysq\">https://github.com/Oliver-Ysq</a>\r\n        </div>\r\n      </footer>);\r\n  }\r\n}","import SmpReact from \"../../SmpReact/SmpReact\";\r\nimport \"./style.css\";\r\n\r\nexport default class Counter extends SmpReact.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.disabled)\r\n    return (\r\n      <div className=\"listWrapper\">\r\n        <div className=\"display\">{this.props.n}</div>\r\n        <div className=\"btnWrapper\">\r\n          <div>\r\n            <button className={this.props.disabled && 'ban'} onClick={() => this.props.add()}>+1</button>\r\n            <button className={this.props.disabled && 'ban'} onClick={() => this.props.minus()}>-1</button>\r\n            <button className={this.props.disabled && 'ban'} onClick={() => this.props.mult()}>×2</button>\r\n            <button className={this.props.disabled && 'ban'} onClick={() => this.props.clear()}>clear</button>\r\n          </div>\r\n          <div class=\"secondLine\">\r\n            <button onClick={()=>this.props.setInterval()}>setInterval</button>\r\n            <button onClick={()=>this.props.clearInterval()}>clearInterval</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import SmpReact from \"./src/SmpReact/SmpReact\";\r\nimport \"./App.css\";\r\nimport Header from \"./src/components/Header/Header\";\r\nimport Footer from \"./src/components/Footer/Footer\";\r\nimport Counter from \"./src/components/Counter/Counter\";\r\n\r\nexport default class App extends SmpReact.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      n: 0,\r\n      interval: null,\r\n      flag: true,\r\n      disabled: false\r\n    };\r\n\r\n    this.calc = (type) => {\r\n      switch (type) {\r\n        case 0:\r\n          this.setState({n: this.state.n + 1});\r\n          break;\r\n        case 1:\r\n          this.setState({n: this.state.n - 1});\r\n          break;\r\n        case 2:\r\n          this.setState({n: 2 * this.state.n});\r\n          break;\r\n        case 3:\r\n          this.setState({n: 0});\r\n          break;\r\n        default:\r\n          throw new Error();\r\n      }\r\n    };\r\n\r\n    this.setInterval = () => {\r\n      if (!this.state.flag) return false;\r\n      const that = this;\r\n      this.setState({\r\n        disabled: true,\r\n        interval: setInterval(() => {\r\n          that.setState({\r\n            n: that.state.n + 1\r\n          });\r\n        }, 1000),\r\n        flag: false\r\n      });\r\n    };\r\n\r\n    this.clearInterval = () => {\r\n      if (this.state.flag === false) {\r\n        clearInterval(this.state.interval);\r\n        window.alert(\"定时器已关闭\");\r\n      }\r\n      this.setState({\r\n        flag: true,\r\n        interval: null,\r\n        disabled: false\r\n      });\r\n    };\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"page\">\r\n        <Header/>\r\n        <main>\r\n          <Counter disabled={this.state.disabled} n={this.state.n} interval={this.state.interval}\r\n                   add={() => this.calc(0)} minus={() => this.calc(1)}\r\n                   mult={() => this.calc(2)}\r\n                   clear={() => this.calc(3)} setInterval={() => this.setInterval()}\r\n                   clearInterval={() => this.clearInterval()}/>\r\n        </main>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}","import SmpReact from \"./src/SmpReact/SmpReact\";\r\nimport SmpReactDom from \"./src/SmpReact/SmpReactDom\";\r\nimport App from \"./App\";\r\n\r\nSmpReactDom.render(<App/>,\r\n  document.getElementById(\"root\"));"]}